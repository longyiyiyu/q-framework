/**
 * a template engine
 * @version 0.0.1
 * @link https://github.com/riot/tmpl
 * 
 */

var _cache = {};

/**
 * The exposed tmpl function returns the template value from the cache, render with data.
 *
 * @param   {string} str  - Expression or template with zero or more expressions
 * @param   {Object} data - A Tag instance, for setting the context
 * @returns {*} Raw value of the expression or template to render
 * @private
 */
function _tmpl(str, data) {
    if (!str) return str; // catch falsy values here

    return (_cache[str] || (_cache[str] = _create(str))).call(data, _logErr);
}

_tmpl.errorHandler = null;

/**
 * Output an error message through the `_tmpl.errorHandler` function.
 *
 * @param {Error}  err - The Error instance generated by the exception
 * @param {object} ctx - The context
 * @private
 */
function _logErr(err, ctx) {
    if (_tmpl.errorHandler) {
        _tmpl.errorHandler(err);
    }
}

/**
 * Creates a function instance to get a value from the received template string.
 *
 * It'll halt the app if the expression has errors (Parse Error or SyntaxError).
 *
 * @param {string} str - The template. Can include zero or more expressions
 * @returns {Function} An instance of Function with the compiled template.
 * @private
 */
function _create(str) {
    var expr = _getTmpl(str);

    if (expr.slice(0, 11) !== 'try{return ') expr = 'return ' + expr;

    if (arguments.length > 1) console.log('--- getter:\n    `' + expr + '`\n---');

    // Now, we can create the function to return by calling the Function constructor.
    // The parameter `E` is the error handler for runtime only.
    return new Function('E', expr + ';'); //eslint-disable-line no-new-func
}

var CH_IDEXPR = '\u2057',
    RE_STRINGS = /"[^"\\]*(?:\\[\S\s][^"\\]*)*"|'[^'\\]*(?:\\[\S\s][^'\\]*)*'/g,
    S_QBLOCKS = R_STRINGS.source + '|' +
    /(?:\breturn\s+|(?:[$\w\)\]]|\+\+|--)\s*(\/)(?![*\/]))/.source + '|' +
    /\/(?=[^*\/])[^[\/\\]*(?:(?:\[(?:\\.|[^\]\\]*)*\]|\\.)[^[\/\\]*)*?(\/)[gim]*/.source,
    RE_CSNAME = /^(?:(-?[_A-Za-z\xA0-\xFF][-\w\xA0-\xFF]*)|\u2057(\d+)~):/,
    RE_QBLOCK = RegExp(S_QBLOCKS, 'g'),
    RE_DQUOTE = /\u2057/g,
    RE_QBMARK = /\u2057(\d+)~/g
